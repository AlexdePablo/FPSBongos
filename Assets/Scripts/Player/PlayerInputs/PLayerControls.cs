//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Player/PlayerInputs/PLayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PLayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PLayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PLayerControls"",
    ""maps"": [
        {
            ""name"": ""Movement"",
            ""id"": ""8724f904-c3e1-48d9-ad0c-c89461be6539"",
            ""actions"": [
                {
                    ""name"": ""WASD"",
                    ""type"": ""Value"",
                    ""id"": ""b12eb771-e019-4afd-b407-1f4fff5bd149"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""52573c76-941e-4bcd-a6d8-dad4959fe7c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseX"",
                    ""type"": ""Value"",
                    ""id"": ""8c09ee98-4de8-47ec-b3c2-c34e611260cd"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseY"",
                    ""type"": ""Value"",
                    ""id"": ""c4d08f67-1d05-48c6-a3a4-3e8687ec7286"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""e21bd52a-617d-4d4f-95ee-9df3e91ba1f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crunch"",
                    ""type"": ""Button"",
                    ""id"": ""fe1b1857-3e2f-47f1-8c32-34a263568866"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""326b8e7e-d650-4912-83b8-29cb2256aede"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Raton"",
                    ""id"": ""e00f9d55-08a4-4d84-8057-92869a7fe4ce"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f9f79a5d-1d68-410c-a2c1-e209545afd3f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""373b26a8-6132-49db-adfe-c50104445a3b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7b62c44d-7554-4e46-a741-813c57042932"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4a527bd1-9038-4ed1-a1ab-43792e6be525"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Mando"",
                    ""id"": ""25be6db7-887e-4548-b840-b11958ea72ae"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""837b88e3-976d-4949-b672-5f113e6d2e50"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""114291c8-aec3-4541-9f19-3d645531333f"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""039d8a93-14f2-4420-9c1e-f1be5db205f9"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9fa918bd-d6c2-40ae-ac2d-c4a345fda534"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""efd40060-7825-45dc-b531-22e55a8ea4c4"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3dad2991-c433-41e4-a58d-1ac3bc3574d6"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a16c223-d895-41cd-bd5d-1027ae414370"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c060946-167a-4c86-943f-8cc83b8bbc61"",
                    ""path"": ""<Gamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b88925fb-462a-4b92-be55-661afea28a9e"",
                    ""path"": ""<Mouse>/delta/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""322a9fd9-39fc-4f27-824e-4f5956588269"",
                    ""path"": ""<Gamepad>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0253c529-98df-4353-976d-89067d096335"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ff0669c-99a6-4952-95ad-cc23763d0882"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""516b4c6d-2fb8-4bdc-86e6-7c8633c903c9"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0a0e5a4-b337-4cfc-b29a-37bae883e7e3"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Arma"",
            ""id"": ""a8745264-77f1-4b1e-9f35-f48b23543bb0"",
            ""actions"": [
                {
                    ""name"": ""Recargar"",
                    ""type"": ""Button"",
                    ""id"": ""4889dc33-535d-4ded-8b11-31d95e817cf8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Arma"",
                    ""type"": ""Button"",
                    ""id"": ""4e03a2fc-0d3e-41fb-a15c-b0a38d25c7e5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CambiarArma1"",
                    ""type"": ""Button"",
                    ""id"": ""5070b828-304d-40de-ac87-291931eacf6e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CambiarArma2"",
                    ""type"": ""Button"",
                    ""id"": ""fbafdf17-bbd2-4be3-9b09-4fb9ff3d600a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CanviCamara"",
                    ""type"": ""Button"",
                    ""id"": ""d73ddbd4-5ee3-41fa-a90a-0269398b8447"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CambiarArma3"",
                    ""type"": ""Button"",
                    ""id"": ""807c4415-0389-494f-9c50-13cc2cd035bf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gancho"",
                    ""type"": ""Button"",
                    ""id"": ""4711635b-f0bc-4364-9569-2872565c9161"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""de8db06b-29ce-43cd-807d-9e292791802c"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Recargar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03ed8e5f-4471-4f28-9933-34ef8d78727d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Arma"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72a6756d-8592-476f-8f76-8258d31e64a5"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CambiarArma1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11fb7a4a-1079-43c5-bf24-fdc6b00d06e4"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CambiarArma2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6103695-fc41-4c0d-96e7-21067e33dce9"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CanviCamara"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af749d7b-a58f-46a4-a38c-f28551c379a0"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CambiarArma3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc063175-798a-4fde-b31c-36509a0f662a"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Gancho"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Movement
        m_Movement = asset.FindActionMap("Movement", throwIfNotFound: true);
        m_Movement_WASD = m_Movement.FindAction("WASD", throwIfNotFound: true);
        m_Movement_Jump = m_Movement.FindAction("Jump", throwIfNotFound: true);
        m_Movement_MouseX = m_Movement.FindAction("MouseX", throwIfNotFound: true);
        m_Movement_MouseY = m_Movement.FindAction("MouseY", throwIfNotFound: true);
        m_Movement_Sprint = m_Movement.FindAction("Sprint", throwIfNotFound: true);
        m_Movement_Crunch = m_Movement.FindAction("Crunch", throwIfNotFound: true);
        m_Movement_Pause = m_Movement.FindAction("Pause", throwIfNotFound: true);
        // Arma
        m_Arma = asset.FindActionMap("Arma", throwIfNotFound: true);
        m_Arma_Recargar = m_Arma.FindAction("Recargar", throwIfNotFound: true);
        m_Arma_Arma = m_Arma.FindAction("Arma", throwIfNotFound: true);
        m_Arma_CambiarArma1 = m_Arma.FindAction("CambiarArma1", throwIfNotFound: true);
        m_Arma_CambiarArma2 = m_Arma.FindAction("CambiarArma2", throwIfNotFound: true);
        m_Arma_CanviCamara = m_Arma.FindAction("CanviCamara", throwIfNotFound: true);
        m_Arma_CambiarArma3 = m_Arma.FindAction("CambiarArma3", throwIfNotFound: true);
        m_Arma_Gancho = m_Arma.FindAction("Gancho", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Movement
    private readonly InputActionMap m_Movement;
    private IMovementActions m_MovementActionsCallbackInterface;
    private readonly InputAction m_Movement_WASD;
    private readonly InputAction m_Movement_Jump;
    private readonly InputAction m_Movement_MouseX;
    private readonly InputAction m_Movement_MouseY;
    private readonly InputAction m_Movement_Sprint;
    private readonly InputAction m_Movement_Crunch;
    private readonly InputAction m_Movement_Pause;
    public struct MovementActions
    {
        private @PLayerControls m_Wrapper;
        public MovementActions(@PLayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @WASD => m_Wrapper.m_Movement_WASD;
        public InputAction @Jump => m_Wrapper.m_Movement_Jump;
        public InputAction @MouseX => m_Wrapper.m_Movement_MouseX;
        public InputAction @MouseY => m_Wrapper.m_Movement_MouseY;
        public InputAction @Sprint => m_Wrapper.m_Movement_Sprint;
        public InputAction @Crunch => m_Wrapper.m_Movement_Crunch;
        public InputAction @Pause => m_Wrapper.m_Movement_Pause;
        public InputActionMap Get() { return m_Wrapper.m_Movement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovementActions set) { return set.Get(); }
        public void SetCallbacks(IMovementActions instance)
        {
            if (m_Wrapper.m_MovementActionsCallbackInterface != null)
            {
                @WASD.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnWASD;
                @WASD.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnWASD;
                @WASD.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnWASD;
                @Jump.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnJump;
                @MouseX.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnMouseX;
                @MouseX.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnMouseX;
                @MouseX.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnMouseX;
                @MouseY.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnMouseY;
                @MouseY.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnMouseY;
                @MouseY.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnMouseY;
                @Sprint.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnSprint;
                @Crunch.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnCrunch;
                @Crunch.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnCrunch;
                @Crunch.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnCrunch;
                @Pause.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnPause;
            }
            m_Wrapper.m_MovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @WASD.started += instance.OnWASD;
                @WASD.performed += instance.OnWASD;
                @WASD.canceled += instance.OnWASD;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @MouseX.started += instance.OnMouseX;
                @MouseX.performed += instance.OnMouseX;
                @MouseX.canceled += instance.OnMouseX;
                @MouseY.started += instance.OnMouseY;
                @MouseY.performed += instance.OnMouseY;
                @MouseY.canceled += instance.OnMouseY;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Crunch.started += instance.OnCrunch;
                @Crunch.performed += instance.OnCrunch;
                @Crunch.canceled += instance.OnCrunch;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }
        }
    }
    public MovementActions @Movement => new MovementActions(this);

    // Arma
    private readonly InputActionMap m_Arma;
    private IArmaActions m_ArmaActionsCallbackInterface;
    private readonly InputAction m_Arma_Recargar;
    private readonly InputAction m_Arma_Arma;
    private readonly InputAction m_Arma_CambiarArma1;
    private readonly InputAction m_Arma_CambiarArma2;
    private readonly InputAction m_Arma_CanviCamara;
    private readonly InputAction m_Arma_CambiarArma3;
    private readonly InputAction m_Arma_Gancho;
    public struct ArmaActions
    {
        private @PLayerControls m_Wrapper;
        public ArmaActions(@PLayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Recargar => m_Wrapper.m_Arma_Recargar;
        public InputAction @Arma => m_Wrapper.m_Arma_Arma;
        public InputAction @CambiarArma1 => m_Wrapper.m_Arma_CambiarArma1;
        public InputAction @CambiarArma2 => m_Wrapper.m_Arma_CambiarArma2;
        public InputAction @CanviCamara => m_Wrapper.m_Arma_CanviCamara;
        public InputAction @CambiarArma3 => m_Wrapper.m_Arma_CambiarArma3;
        public InputAction @Gancho => m_Wrapper.m_Arma_Gancho;
        public InputActionMap Get() { return m_Wrapper.m_Arma; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ArmaActions set) { return set.Get(); }
        public void SetCallbacks(IArmaActions instance)
        {
            if (m_Wrapper.m_ArmaActionsCallbackInterface != null)
            {
                @Recargar.started -= m_Wrapper.m_ArmaActionsCallbackInterface.OnRecargar;
                @Recargar.performed -= m_Wrapper.m_ArmaActionsCallbackInterface.OnRecargar;
                @Recargar.canceled -= m_Wrapper.m_ArmaActionsCallbackInterface.OnRecargar;
                @Arma.started -= m_Wrapper.m_ArmaActionsCallbackInterface.OnArma;
                @Arma.performed -= m_Wrapper.m_ArmaActionsCallbackInterface.OnArma;
                @Arma.canceled -= m_Wrapper.m_ArmaActionsCallbackInterface.OnArma;
                @CambiarArma1.started -= m_Wrapper.m_ArmaActionsCallbackInterface.OnCambiarArma1;
                @CambiarArma1.performed -= m_Wrapper.m_ArmaActionsCallbackInterface.OnCambiarArma1;
                @CambiarArma1.canceled -= m_Wrapper.m_ArmaActionsCallbackInterface.OnCambiarArma1;
                @CambiarArma2.started -= m_Wrapper.m_ArmaActionsCallbackInterface.OnCambiarArma2;
                @CambiarArma2.performed -= m_Wrapper.m_ArmaActionsCallbackInterface.OnCambiarArma2;
                @CambiarArma2.canceled -= m_Wrapper.m_ArmaActionsCallbackInterface.OnCambiarArma2;
                @CanviCamara.started -= m_Wrapper.m_ArmaActionsCallbackInterface.OnCanviCamara;
                @CanviCamara.performed -= m_Wrapper.m_ArmaActionsCallbackInterface.OnCanviCamara;
                @CanviCamara.canceled -= m_Wrapper.m_ArmaActionsCallbackInterface.OnCanviCamara;
                @CambiarArma3.started -= m_Wrapper.m_ArmaActionsCallbackInterface.OnCambiarArma3;
                @CambiarArma3.performed -= m_Wrapper.m_ArmaActionsCallbackInterface.OnCambiarArma3;
                @CambiarArma3.canceled -= m_Wrapper.m_ArmaActionsCallbackInterface.OnCambiarArma3;
                @Gancho.started -= m_Wrapper.m_ArmaActionsCallbackInterface.OnGancho;
                @Gancho.performed -= m_Wrapper.m_ArmaActionsCallbackInterface.OnGancho;
                @Gancho.canceled -= m_Wrapper.m_ArmaActionsCallbackInterface.OnGancho;
            }
            m_Wrapper.m_ArmaActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Recargar.started += instance.OnRecargar;
                @Recargar.performed += instance.OnRecargar;
                @Recargar.canceled += instance.OnRecargar;
                @Arma.started += instance.OnArma;
                @Arma.performed += instance.OnArma;
                @Arma.canceled += instance.OnArma;
                @CambiarArma1.started += instance.OnCambiarArma1;
                @CambiarArma1.performed += instance.OnCambiarArma1;
                @CambiarArma1.canceled += instance.OnCambiarArma1;
                @CambiarArma2.started += instance.OnCambiarArma2;
                @CambiarArma2.performed += instance.OnCambiarArma2;
                @CambiarArma2.canceled += instance.OnCambiarArma2;
                @CanviCamara.started += instance.OnCanviCamara;
                @CanviCamara.performed += instance.OnCanviCamara;
                @CanviCamara.canceled += instance.OnCanviCamara;
                @CambiarArma3.started += instance.OnCambiarArma3;
                @CambiarArma3.performed += instance.OnCambiarArma3;
                @CambiarArma3.canceled += instance.OnCambiarArma3;
                @Gancho.started += instance.OnGancho;
                @Gancho.performed += instance.OnGancho;
                @Gancho.canceled += instance.OnGancho;
            }
        }
    }
    public ArmaActions @Arma => new ArmaActions(this);
    public interface IMovementActions
    {
        void OnWASD(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMouseX(InputAction.CallbackContext context);
        void OnMouseY(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnCrunch(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IArmaActions
    {
        void OnRecargar(InputAction.CallbackContext context);
        void OnArma(InputAction.CallbackContext context);
        void OnCambiarArma1(InputAction.CallbackContext context);
        void OnCambiarArma2(InputAction.CallbackContext context);
        void OnCanviCamara(InputAction.CallbackContext context);
        void OnCambiarArma3(InputAction.CallbackContext context);
        void OnGancho(InputAction.CallbackContext context);
    }
}
